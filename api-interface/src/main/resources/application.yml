server:
  port: 18081

management:
  endpoints:
    web:
      exposure:
        include: health, info

spring:
  datasource:
    hikari:
      jdbc-url: jdbc:mysql://localhost:3306/racket?useSSL=false&useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true
      username: suyeon
      password: racket
      driver-class-name: com.mysql.cj.jdbc.Driver

  data:
    mongodb:
      host: localhost
      port: 27017
      username: root
      password: 1234
      connectionString: mongodb://root:1234@localhost:27017

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        format_sql: true
        implicit_naming_strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        physical_naming_strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        hbm2ddl.auto: update
    open-in-view: false
    show-sql: true

  redis:
    host: 127.0.0.1
    password: 1234
    port: 6379
  session:
    store-type: redis

  config:
    import: swagger.yml

  servlet:
    multipart:
      enabled: true
      file-size-threshold: 0B # 파일을 디스크에 저장하지 않고 메모리에 저장하는 최소 크기 (default: 0B)
      max-file-size: 100MB # 한개 파일의 최대 사이즈 (default: 1MB)
      max-request-size: 100MB # 한개 요청의 최대 사이즈 (default: 10MB)

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace

uploadPath: file:///Users/suyeon/Desktop/image/

client:
  serviceUrl:
    producer: http://localhost:18082/produce/v1
    product: localhost:18081/api/v1/product
    delivery: localhost:18083/api/v1/delivery