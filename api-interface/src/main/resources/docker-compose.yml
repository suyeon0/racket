version: "3"
services:
  db:
    image: mysql:latest
    container_name: mysql-server
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root123
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./data/:/var/lib/mysql

  ### redis
  redis:
    hostname: redis
    container_name: redis
    image: redis:latest
    command: redis-server --requirepass 1234 --port 6379
    ports:
      - 6379:6379

  ### mongo
  mongo:
    image: mongo:latest
    restart: always
    container_name: mongodb
    ports:
      - 27017:27017
    volumes:
      - ./mongodb:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=1234
      - MONGO_INITDB_DATABASE=racket

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=1234
    depends_on:
      - mongo
    ports:
      - 8081:8081

  ### kafka
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    platform: linux/amd64
    restart: always
    volumes:
      - "./zookeeper/data:/data"
      - "./zookeeper/logs:/datalog"
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    platform: linux/arm64
    restart: always
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    #      KAFKA_CREATE_TOPICS: "test-lecture-test-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
  kafka-manager:
    image: hlebalbau/kafka-manager:stable
    container_name: kafka-manager
    platform: linux/amd64
    restart: always
    depends_on:
      - kafka
      - zookeeper
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: "random-secret"
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    ports:
      - "9000:9000"